{"ast":null,"code":"var _jsxFileName = \"/Users/emyrtabrizi/Desktop/Gymshark /emyr/myapp/components/container.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nconst Container = props => {\n  let preloadImages = this.props.excercises.map(function (item) {\n    return __jsx(\"img\", {\n      scr: item.female.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    });\n  });\n  return __jsx(\"div\", {\n    id: \"main-container\",\n    className: _JSXStyle.dynamic([[\"439550720\", [props.img, props.infoToggle ? '100%' : '70%', props.infoToggle ? '0 -250px' : '-100px 0', props.img, props.infoToggle ? '0 0' : '-300px 0px']]]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.children, preloadImages, __jsx(_JSXStyle, {\n    id: \"439550720\",\n    dynamic: [props.img, props.infoToggle ? '100%' : '70%', props.infoToggle ? '0 -250px' : '-100px 0', props.img, props.infoToggle ? '0 0' : '-300px 0px'],\n    __self: this\n  }, `html{width:100%;height:100%;background:url(${props.img}) no-repeat center center fixed;-webkit-background-size:cover;-moz-background-size:cover;-o-background-size:cover;background-size:${props.infoToggle ? '100%' : '70%'};position:relative;background-position:${props.infoToggle ? '0 -250px' : '-100px 0'};-webkit-transition:all 1s;transition:all 1s;overflow:hidden;}@media only screen and (max-width:1024px){html{width:100%;height:100%;background:url(${props.img}) no-repeat center center fixed;-webkit-background-size:cover;-moz-background-size:cover;-o-background-size:cover;background-size:cover;position:relative;-webkit-transition:all 0.7s;background-position:${props.infoToggle ? '0 0' : '-300px 0px'};-webkit-transition:all 1s;transition:all 1s;overflow:hidden;}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lbXlydGFicml6aS9EZXNrdG9wL0d5bXNoYXJrIC9lbXlyL215YXBwL2NvbXBvbmVudHMvY29udGFpbmVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtCK0IsQUFJd0IsQUFrQkosV0FqQkssQUFrQkosWUFqQm1FLEFBa0JKLDJFQWpCekMsQUFrQkosOEJBakJDLEFBa0JKLDJCQWpCRSxBQWtCSix5QkFqQndCLEFBa0IzQixzQkFDSixrQkFDVSxLQW5CTixrQkFDK0IsS0FtQkosNENBbEIzQixLQW1CSix1Q0FsQkUsS0FtQkosV0FsQmhCLEtBbUJKIiwiZmlsZSI6Ii9Vc2Vycy9lbXlydGFicml6aS9EZXNrdG9wL0d5bXNoYXJrIC9lbXlyL215YXBwL2NvbXBvbmVudHMvY29udGFpbmVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuXG5jb25zdCBDb250YWluZXIgPSAocHJvcHMpID0+IHtcblxuICAgIGxldCBwcmVsb2FkSW1hZ2VzID0gdGhpcy5wcm9wcy5leGNlcmNpc2VzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICByZXR1cm4gKDxpbWcgc2NyPXtpdGVtLmZlbWFsZS5pbWFnZX0gLz4pXG4gICAgfSk7XG5cblxuICAgIHJldHVybiAoXG5cbiAgICAgICAgXG5cbiAgICAgICAgPGRpdiBpZD1cIm1haW4tY29udGFpbmVyXCI+XG5cbiAgICAgICAgICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgICAgICAgICAgIHtwcmVsb2FkSW1hZ2VzfVxuICAgICAgICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcbiAgICAgICAgXG4gICAgICAgIGh0bWwge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoJHtwcm9wcy5pbWd9KSBuby1yZXBlYXQgY2VudGVyIGNlbnRlciBmaXhlZDsgXG4gICAgICAgICAgICAtd2Via2l0LWJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICAgICAgICAtbW96LWJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICAgICAgICAtby1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiAke3Byb3BzLmluZm9Ub2dnbGUgPyAnMTAwJScgOiAnNzAlJ307XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IFxuICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogJHtwcm9wcy5pbmZvVG9nZ2xlID8gJzAgLTI1MHB4JyA6ICctMTAwcHggMCd9O1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDFzO1xuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgfVxuXG4gICAgICAgIFxuXG4gICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgIGh0bWwge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoJHtwcm9wcy5pbWd9KSBuby1yZXBlYXQgY2VudGVyIGNlbnRlciBmaXhlZDsgXG4gICAgICAgIC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgLW1vei1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICAtby1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IFxuICAgICAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjdzO1xuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAke3Byb3BzLmluZm9Ub2dnbGUgPyAnMCAwJyA6ICctMzAwcHggMHB4J307XG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAxcztcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB9XG5cbiAgIH0gXG4gICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9kaXY+XG5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IENvbnRhaW5lcjtcblxuXG5cblxuXG4iXX0= */\n/*@ sourceURL=/Users/emyrtabrizi/Desktop/Gymshark /emyr/myapp/components/container.js */`));\n};\n\nexport default Container;","map":{"version":3,"sources":["/Users/emyrtabrizi/Desktop/Gymshark /emyr/myapp/components/container.js"],"names":["React","Container","props","preloadImages","excercises","map","item","female","image","img","infoToggle","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,MAAIC,aAAa,GAAG,KAAKD,KAAL,CAAWE,UAAX,CAAsBC,GAAtB,CAA0B,UAAUC,IAAV,EAAgB;AAC1D,WAAQ;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,MAAL,CAAYC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH,GAFmB,CAApB;AAKA,SAII;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA,iDASsBN,KAAK,CAACO,GAT5B,EAauBP,KAAK,CAACQ,UAAN,GAAmB,MAAnB,GAA4B,KAbnD,EAe2BR,KAAK,CAACQ,UAAN,GAAmB,UAAnB,GAAgC,UAf3D,EA2BkBR,KAAK,CAACO,GA3BxB,EAkCuBP,KAAK,CAACQ,UAAN,GAAmB,KAAnB,GAA2B,YAlClD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKR,KAAK,CAACS,QAFX,EAGKR,aAHL;AAAA;AAAA,cASsBD,KAAK,CAACO,GAT5B,EAauBP,KAAK,CAACQ,UAAN,GAAmB,MAAnB,GAA4B,KAbnD,EAe2BR,KAAK,CAACQ,UAAN,GAAmB,UAAnB,GAAgC,UAf3D,EA2BkBR,KAAK,CAACO,GA3BxB,EAkCuBP,KAAK,CAACQ,UAAN,GAAmB,KAAnB,GAA2B,YAlClD;AAAA;AAAA,mDASsBR,KAAK,CAACO,GAT5B,qIAauBP,KAAK,CAACQ,UAAN,GAAmB,MAAnB,GAA4B,KAbnD,0CAe2BR,KAAK,CAACQ,UAAN,GAAmB,UAAnB,GAAgC,UAf3D,sJA2BkBR,KAAK,CAACO,GA3BxB,6MAkCuBP,KAAK,CAACQ,UAAN,GAAmB,KAAnB,GAA2B,YAlClD;;yFAAA,EAJJ;AAgDH,CAvDD;;AAyDA,eAAeT,SAAf","sourcesContent":["import React from 'react';\n\n\nconst Container = (props) => {\n\n    let preloadImages = this.props.excercises.map(function (item) {\n        return (<img scr={item.female.image} />)\n    });\n\n\n    return (\n\n        \n\n        <div id=\"main-container\">\n\n            {props.children}\n            {preloadImages}\n            <style jsx global>{`\n        \n        html {\n            width: 100%;\n            height: 100%;\n            background: url(${props.img}) no-repeat center center fixed; \n            -webkit-background-size: cover;\n            -moz-background-size: cover;\n            -o-background-size: cover;\n            background-size: ${props.infoToggle ? '100%' : '70%'};\n            position: relative; \n            background-position: ${props.infoToggle ? '0 -250px' : '-100px 0'};\n            transition: all 1s;\n            overflow: hidden;\n        }\n\n        \n\n   @media only screen and (max-width: 1024px) {\n    \n    html {\n        width: 100%;\n        height: 100%;\n        background: url(${props.img}) no-repeat center center fixed; \n        -webkit-background-size: cover;\n        -moz-background-size: cover;\n        -o-background-size: cover;\n        background-size: cover;\n        position: relative; \n        -webkit-transition: all 0.7s;\n        background-position: ${props.infoToggle ? '0 0' : '-300px 0px'};\n        transition: all 1s;\n        overflow: hidden;\n    }\n\n   } \n           `}</style>\n        </div>\n\n    )\n}\n\nexport default Container;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}