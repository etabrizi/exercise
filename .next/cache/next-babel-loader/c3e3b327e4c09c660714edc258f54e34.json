{"ast":null,"code":"var _jsxFileName = \"/Users/emyrtabrizi/Desktop/Gymshark /app/exercise/components/container2.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\n\nclass Container extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loaded: false\n    });\n  }\n\n  render() {\n    console.log(this.props.img);\n    /*\n    const test = new Image().src = this.props.img;\n    test.src = this.props.img\n     test.onload = () => {\n        this.setState({\n            loaded: true\n        })\n    };\n     */\n\n    return __jsx(\"div\", {\n      id: \"main-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.state.loaded ? test : 'loading', this.props.children);\n  }\n\n}\n\nexport default Container;","map":{"version":3,"sources":["/Users/emyrtabrizi/Desktop/Gymshark /app/exercise/components/container2.js"],"names":["React","Component","Container","loaded","render","console","log","props","img","state","test","children"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAAA;AAAA;;AAAA,mCAEtB;AACJE,MAAAA,MAAM,EAAE;AADJ,KAFsB;AAAA;;AAO9BC,EAAAA,MAAM,GAAG;AAELC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,GAAvB;AAEA;;;;;;;;;;AAYA,WACI;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,KAAL,CAAWN,MAAX,GAAoBO,IAApB,GAA2B,SADhC,EAEK,KAAKH,KAAL,CAAWI,QAFhB,CADJ;AAOH;;AA9B6B;;AAiClC,eAAeT,SAAf","sourcesContent":["\nimport React, { Component } from 'react';\n\nclass Container extends Component {\n\n    state = {\n        loaded: false\n    }\n\n\n    render() {\n\n        console.log(this.props.img);\n\n        /*\n        const test = new Image().src = this.props.img;\n        test.src = this.props.img\n\n        test.onload = () => {\n            this.setState({\n                loaded: true\n            })\n        };\n\n        */\n\n        return (\n            <div id=\"main-container\">\n                {this.state.loaded ? test : 'loading'}\n                {this.props.children}\n\n            </div>\n        );\n    }\n}\n\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}