{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Exercise from './exercise';\nimport Search from './search';\nimport Container from './container';\nimport Heading from './heading';\nimport Controls from './controls';\n\nclass MainApp extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      work: this.props.work.exercises,\n      step: 'start',\n      counter: 1,\n      gender: true,\n      infoToggle: true,\n      searchToggle: true,\n      searchTerm: '',\n      imageStatus: '',\n      userSearchActive: false,\n      userSearchFound: {\n        name: '',\n        transcript: '',\n        female: '',\n        male: ''\n      }\n    });\n\n    _defineProperty(this, \"toggleGender\", event => {\n      event.preventDefault();\n      this.setState({\n        gender: !this.state.gender\n      });\n    });\n\n    _defineProperty(this, \"closeAll\", event => {\n      event.preventDefault();\n      this.setState({\n        searchToggle: true,\n        infoToggle: true\n      });\n    });\n\n    _defineProperty(this, \"toggleSearch\", event => {\n      event.preventDefault();\n      this.setState({\n        searchToggle: false,\n        infoToggle: true\n      });\n    });\n\n    _defineProperty(this, \"toggleInfo\", event => {\n      event.preventDefault();\n      this.setState({\n        searchToggle: true,\n        infoToggle: false\n      });\n    });\n\n    _defineProperty(this, \"counterIncrease\", event => {\n      event.preventDefault();\n      this.setState({\n        userSearchActive: false\n      });\n\n      if (this.state.counter === this.state.work.length - 1) {\n        this.setState({\n          counter: 0\n        });\n      } else {\n        this.setState({\n          counter: this.state.counter + 1\n        });\n      }\n    });\n\n    _defineProperty(this, \"counterDecrease\", event => {\n      event.preventDefault();\n\n      if (this.state.counter === 0) {\n        this.setState({\n          counter: this.state.work.length - 1\n        });\n      } else {\n        this.setState({\n          counter: this.state.counter - 1\n        });\n      }\n    });\n\n    _defineProperty(this, \"getSearchValue\", event => {\n      var search = event.target.value;\n      this.setState({\n        searchTerm: search\n      });\n    });\n\n    _defineProperty(this, \"updateCard\", event => {\n      var exerciseSelected = event.currentTarget.innerHTML;\n      var userSearch = this.state.work.filter(item => {\n        return item.name === exerciseSelected;\n      });\n\n      if (userSearch) {\n        this.setState({\n          userSearchActive: true,\n          infoToggle: true,\n          searchToggle: true,\n          userSearchFound: {\n            name: userSearch[0].name,\n            transcript: userSearch[0].transcript,\n            female: {\n              image: userSearch[0].female.image\n            },\n            male: {\n              image: userSearch[0].male.image\n            }\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    const error = this.state.step === 'error' ? __jsx(\"p\", {\n      className: \"error\"\n    }, \" Sorry, the application is offline\") : '';\n    const app = this.state.step === 'start' ? __jsx(\"div\", null, __jsx(Controls, {\n      closeAll: this.closeAll,\n      searchToggle: this.state.searchToggle,\n      toggleSearch: this.toggleSearch,\n      toggleGender: this.toggleGender,\n      gender: this.state.gender,\n      counterDecrease: this.counterDecrease,\n      counterIncrease: this.counterIncrease,\n      toggleInfo: this.toggleInfo,\n      infoToggle: this.state.infoToggle\n    }), __jsx(Exercise, {\n      transcript: this.state.userSearchActive ? this.state.userSearchFound.transcript : this.state.work[this.state.counter].transcript,\n      infoToggle: this.state.infoToggle,\n      title: this.state.userSearchActive ? this.state.userSearchFound.name : this.state.work[this.state.counter].name\n    }), __jsx(Search, {\n      searchToggle: this.state.searchToggle,\n      excercises: this.state.work,\n      updateCard: this.updateCard,\n      searchTerm: this.state.searchTerm,\n      getSearchValue: this.getSearchValue\n    }), __jsx(Heading, {\n      searchToggle: this.state.searchToggle,\n      infoToggle: this.state.infoToggle,\n      title: this.state.userSearchActive ? this.state.userSearchFound.name : this.state.work[this.state.counter].name\n    })) : __jsx(\"p\", {\n      className: \"loading\"\n    }, \"..Loading..\");\n    return __jsx(Container, {\n      excercises: this.state.work,\n      searchToggle: this.state.searchToggle,\n      infoToggle: this.state.infoToggle,\n      img: this.state.userSearchActive ? this.state.userSearchFound[this.state.gender ? 'male' : 'female'].image : this.state.work[this.state.counter][this.state.gender ? 'male' : 'female'].image\n    }, this.state.step === 'start' && app);\n  }\n\n}\n\nexport default MainApp;","map":null,"metadata":{},"sourceType":"module"}