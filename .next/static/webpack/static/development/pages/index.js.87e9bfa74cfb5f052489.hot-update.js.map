{"version":3,"file":"static/webpack/static/development/pages/index.js.87e9bfa74cfb5f052489.hot-update.js","sources":["webpack:///./components/container.js","webpack:///./components/mainApp.js"],"sourcesContent":["import React from 'react';\n\n\nconst Container = (props) => {\n\n    let preloadImages = this.props.\n\n\n    return (\n        <div id=\"main-container\">\n\n            {props.children}\n\n            <style jsx global>{`\n        \n        html {\n            width: 100%;\n            height: 100%;\n            background: url(${props.img}) no-repeat center center fixed; \n            -webkit-background-size: cover;\n            -moz-background-size: cover;\n            -o-background-size: cover;\n            background-size: ${props.infoToggle ? '100%' : '70%'};\n            position: relative; \n            background-position: ${props.infoToggle ? '0 -250px' : '-100px 0'};\n            transition: all 1s;\n            overflow: hidden;\n        }\n\n        img {display: none}\n\n   @media only screen and (max-width: 1024px) {\n    \n    html {\n        width: 100%;\n        height: 100%;\n        background: url(${props.img}) no-repeat center center fixed; \n        -webkit-background-size: cover;\n        -moz-background-size: cover;\n        -o-background-size: cover;\n        background-size: cover;\n        position: relative; \n        -webkit-transition: all 0.7s;\n        background-position: ${props.infoToggle ? '0 0' : '-300px 0px'};\n        transition: all 1s;\n        overflow: hidden;\n    }\n\n   } \n           `}</style>\n        </div>\n\n    )\n}\n\nexport default Container;\n\n\n\n\n\n","//@flow\n\nimport React, { Component } from 'react';\nimport Excercise from './excercise';\nimport Search from './search';\nimport Container from './container';\nimport Heading from './heading';\nimport Controls from './controls'\n\n\ntype State = {\n    work: Array<exercises>,\n    step: string,\n    counter: number,\n    gender: boolean,\n    infoToggle: boolean,\n    searchToggle: boolean,\n    searchTerm: string,\n    imageStatus: string,\n    userSearchActive: boolean,\n    userSearchFound: {\n        name: string,\n        transcript: string,\n        female: string,\n        male: string\n    }\n}\n\n\nclass MainApp extends Component<Props, State> {\n\n    state = {\n        work: this.props.work.exercises,\n        step: 'start',\n        counter: 1,\n        gender: true,\n        infoToggle: true,\n        searchToggle: true,\n        searchTerm: '',\n        imageStatus: '',\n        userSearchActive: false,\n        userSearchFound: {\n            name: '',\n            transcript: '',\n            female: '',\n            male: ''\n        }\n    };\n\n    toggleGender = (event: SyntheticEvent<HTMLInputElement>) => {\n        event.preventDefault();\n        this.setState({\n            gender: !this.state.gender\n        })\n    }\n\n    closeAll = (event: SyntheticEvent<HTMLInputElement>) => {\n        event.preventDefault();\n        this.setState({\n            searchToggle: true,\n            infoToggle: true\n        })\n    }\n\n    toggleSearch = (event: SyntheticEvent<HTMLInputElement>) => {\n        event.preventDefault();\n        this.setState({\n            searchToggle: false,\n            infoToggle: true\n        })\n    }\n\n    toggleInfo = (event: SyntheticEvent<HTMLInputElement>) => {\n        event.preventDefault();\n        this.setState({\n            searchToggle: true,\n            infoToggle: false\n        })\n    }\n\n    counterIncrease = (event: SyntheticEvent<HTMLInputElement>) => {\n        event.preventDefault();\n        this.setState({\n            userSearchActive: false\n        })\n\n        if (this.state.counter === (this.state.work.length - 1)) {\n            this.setState({ counter: 0 })\n        } else {\n            this.setState({ counter: this.state.counter + 1 })\n        }\n    }\n\n    counterDecrease = (event: SyntheticEvent<HTMLInputElement>) => {\n        event.preventDefault();\n        if (this.state.counter === 0) {\n            this.setState({ counter: (this.state.work.length - 1) })\n        } else {\n            this.setState({ counter: this.state.counter - 1 })\n        }\n    }\n\n\n    getSearchValue = (event: SyntheticEvent<HTMLInputElement>) => {\n        var search = event.target.value;\n        this.setState({ searchTerm: search })\n    }\n\n    updateCard = (event: SyntheticEvent<HTMLInputElement>) => {\n\n        var exerciseSelected = event.currentTarget.innerHTML;\n\n        var userSearch = this.state.work.filter((item: Object) => {\n            return item.name === exerciseSelected\n        });\n\n        if (userSearch) {\n            this.setState({\n                userSearchActive: true,\n                infoToggle: true,\n                searchToggle: true,\n                userSearchFound: {\n                    name: userSearch[0].name,\n                    transcript: userSearch[0].transcript,\n                    female: { image: userSearch[0].female.image },\n                    male: { image: userSearch[0].male.image }\n                }\n            })\n        }\n    }\n\n    render() {\n\n        const app = this.state.work.length > 0 ? (\n\n            <div>\n                <Excercise\n                    transcript={this.state.userSearchActive ? this.state.userSearchFound.transcript : this.state.work[this.state.counter].transcript}\n                    infoToggle={this.state.infoToggle} title={this.state.userSearchActive ? this.state.userSearchFound.name : this.state.work[this.state.counter].name}\n                />\n                <Search searchToggle={this.state.searchToggle} excercises={this.state.work} updateCard={this.updateCard} searchTerm={this.state.searchTerm} getSearchValue={this.getSearchValue} />\n                <Heading searchToggle={this.state.searchToggle} infoToggle={this.state.infoToggle} title={this.state.userSearchActive ? this.state.userSearchFound.name : this.state.work[this.state.counter].name} />\n                <Controls closeAll={this.closeAll} searchToggle={this.state.searchToggle} toggleSearch={this.toggleSearch} toggleGender={this.toggleGender} gender={this.state.gender} counterDecrease={this.counterDecrease} counterIncrease={this.counterIncrease} toggleInfo={this.toggleInfo} infoToggle={this.state.infoToggle} />\n            </div>\n        ) : (\n                <p>Sorry Unable to load application content - Please try again later.</p>\n            );\n\n        return (\n            <Container excercises={this.state.work} searchToggle={this.state.searchToggle} infoToggle={this.state.infoToggle} img={this.state.userSearchActive ? this.state.userSearchFound[this.state.gender ? 'male' : 'female'].image : this.state.work[this.state.counter][this.state.gender ? 'male' : 'female'].image}>\n\n                {this.state.step === 'start' && app}\n                {this.state.imageStatus}\n\n            </Container>\n        );\n    }\n}\n\nexport default MainApp;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4CA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AAqBA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAVA;AACA;AAiBA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AAJA;AAWA;AACA;AACA;;;;;;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AA/HA;AACA;AAiIA;;;;;;;;;;;;;A","sourceRoot":""}